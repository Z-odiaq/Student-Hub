pipeline {
    agent any
    
    environment {
        EC2_HOST = 'ec2-54-211-236-231.compute-1.amazonaws.com'
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning the repository...'
                git 'https://github.com/Z-odiaq/Student-Hub.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    echo 'Building the application...'
                    sh 'python -m venv venv'
                    sh '/venv/bin/pip install -r requirements.txt'
                    sh 'python manage.py migrate'

                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Testing the application...'
                    sh 'python manage.py test'
                }
            }
        }

        stage('Deploy to Container') {
            steps {
                script {
                    echo 'Deploying the application...'
                    //archive the file, copy it to the remote windows server and extract it to /app directory replacing existant files 
                    sh 'tar -czf app.tar.gz .'
                    //connect to ec2 instance and copy the file to it using credentials
                    sshagent(['7eca4cc4-2aee-4c84-9c3b-dd588a8cc1bf']) {
                    
                    sh 'scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null app.tar.gz ec2-user@$EC2_HOST:/app/app.tar.gz'
                    
                    //stop django container with the tag studenthub and remove it if it exists
                    sh 'ssh ec2-user@$EC2_HOST "docker stop studenthub"'
                    sh 'ssh ec2-user@$EC2_HOST "docker rm studenthub"'
                    //extract the file to /app directory replacing existant files
                    sh 'ssh ec2-user@$EC2_HOST "tar -xzf /app/app.tar.gz -C /app --overwrite"'
                    //remove the archive
                    sh 'ssh ec2-user@$EC2_HOST "rm /app/app.tar.gz"'
                    //build the docker image from the Dockerfile and tag it as studenthub
                    sh 'ssh ec2-user@$EC2_HOST "docker build -t studenthub /app"'
                    //run the container from the image and expose port 8000
                    sh 'ssh ec2-user@$EC2_HOST "docker run -d --name studenthub -p 8000:8000 studenthub"'
                    } 

                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Done.'
            }
        }
    }
}
